import numpy as np
import h5py

import rospy
from std_msgs.msg import Float32MultiArray, String
from sensor_msgs.msg import Image


resultsFile = 'results.h5'

results = np.empty([1,1])
#results = np.asarray(results)

def callback1(msg):
    global results
    try:
        results = (h5py.File(resultsFile, 'r'))['results'][:]
    except IOError:
        print "Error: results.h5 not exit"
    else:
        results = results[ 0, 1, :, : ]
        #print(results)


if __name__=='__main__':

    rospy.init_node('affmap', anonymous=True)

    #sub = rospy.Subscriber("/kinect2/qhd/image_color_rect",Image,callback1)
    sub = rospy.Subscriber("chatter", String,callback1)

    pub = rospy.Publisher('giveaffmap', Float32MultiArray, queue_size=None)

    rate = rospy.Rate(1)

    while not rospy.is_shutdown():
        affordanceMap = Float32MultiArray(data=results)

        print('Im publishing')
        print(affordanceMap.data.shape)
        pub.publish(affordanceMap)
        rate.sleep()
